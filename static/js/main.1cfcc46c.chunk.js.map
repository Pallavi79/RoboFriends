{"version":3,"sources":["Card.js","CardList.js","SearchBox.js","Scroll.js","ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","id","name","email","CardList","robots","CardComponent","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfJ,SAACC,GAIV,OACA,sBAAKC,UAAU,iDAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,GAAhC,cACR,gCACE,6BAAKH,EAAMI,OACX,4BAAIJ,EAAMK,eCODC,EAhBC,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACVC,EAAgBD,EAAOE,KAAI,SAACC,EAAKC,GACrC,OACA,cAAC,EAAD,CACAR,GAAII,EAAOI,GAAGR,GACdC,KAAMG,EAAOI,GAAGP,KAChBC,MAAOE,EAAOI,GAAGN,OAHNM,MAMb,OACE,gCACEH,EADF,QCKWI,EAfE,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAC7B,OACE,qBAAKb,UAAW,MAAhB,SACG,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCFI,EARA,SAAClB,GACd,OACE,sBAAKmB,MAAO,CAACC,UAAY,SAAUC,OAAQ,kBAAkBC,OAAS,SAAtE,UACGtB,EAAMuB,SADT,QCmBWC,E,kDAnBb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IACDyB,MAAM,CACTC,UAAS,GAHK,E,qDAMlB,SAAkBC,EAAMC,GACtBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG5B,WACE,OAAGG,KAAKJ,MAAMC,SACL,8DAEFG,KAAK7B,MAAMuB,a,GAfKQ,aCkDZC,G,wDA5Cb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXlB,OAAQ,GACRM,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBwB,MAAM,6CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAM3C,WACE,MAA6BZ,KAAKJ,MAA3BlB,EAAP,EAAOA,OAASM,EAAhB,EAAgBA,YACV6B,EAAiBnC,EAAOoC,QAAO,SAAApC,GACnC,OAAOA,EAAOH,KAAKwC,cAAcC,SAAShC,EAAY+B,kBAExD,OAAKrC,EAAOuC,OAIR,sBAAK7C,UAAU,KAAf,UACE,6CACA,cAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WARjB,6C,GAxBKX,cCIHgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1cfcc46c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=(props)=>{\r\n  //const {name,email,id}=props;\r\n  //h2 name also can be done\r\n  //or withn in parameter use destructor({name,email,id})\r\n  return(\r\n  <div className='bg-washed-red dib br3 ma2 grow bw2 shadow-5 tc'>\r\n    <img src={`https://robohash.org/${props.id}?200x200` } />\r\n    <div>\r\n      <h2>{props.name}</h2>\r\n      <p>{props.email}</p>\r\n    </div>\r\n  </div>\r\n  );\r\n  \r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\nconst CardList =({robots})=>{\r\n  const CardComponent = robots.map((user,i) =>{\r\n    return  (\r\n    <Card key={i} \r\n    id={robots[i].id} \r\n    name={robots[i].name}\r\n    email={robots[i].email}\r\n    />);\r\n  });\r\n  return(\r\n    <div>\r\n     {CardComponent};\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox =({searchField,searchChange})=>{\r\n  return (\r\n    <div className ='pa2'>\r\n       <input \r\n       className='pa3 ba b--green bg-lightest-blue'\r\n       type=\"search\" \r\n       placeholder='search robots' \r\n       onChange={searchChange}\r\n       />\r\n       \r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n  return(\r\n    <div style={{overflowY : 'scroll', border :'1px solid black',height : '800px'}}>\r\n      {props.children};\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;","\r\nimport React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      hasError:false\r\n    }\r\n  }\r\n  componentDidCatch(error,info){\r\n    this.setState({hasError : true})\r\n  }\r\n  \r\n  render(){\r\n    if(this.state.hasError){\r\n      return <h1>Ooops!! something went wrong</h1>\r\n    }\r\n    return this.props.children\r\n  };\r\n  \r\n}\r\n\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundry from './ErrorBoundry';\r\nimport './App.css'\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('http://jsonplaceholder.typicode.com/users')\r\n      .then(response => response.json())\r\n      .then(users => this.setState({ robots: users }));\r\n\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  }\r\n  render() {\r\n    const {robots , searchField}=this.state;\r\n    const filteredRobots = robots.filter(robots => {\r\n      return robots.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n    if (!robots.length) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <div className='tc'>\r\n          <h1>RoboFriends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n            <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n            \r\n          </Scroll>\r\n          \r\n        </div>\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n//<Hello prop />\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}